@use './breakpoints' as *;
@use 'sass:math';

$grid-columns: 12;
$grid-gaps: (
  "0": 0,
  "1": 5px,
  "2": 10px,
  "3": 15px,
  "4": 20px,
  "5": 25px,
);

$flex-values: (
  "grow": flex-grow, 
  "shrink": flex-shrink, 
  "wrap": flex-wrap
);
$layout-values: flex-start, flex-end, center, space-between, space-around, space-evenly;

.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
  box-sizing: border-box;
}

.row {
  display: flex;
  flex-flow: row wrap;
}


@each $key, $val in $flex-values {
  @if $key == "wrap" {
    .#{$key}-0 {
      flex-wrap: nowrap;
    }
    .#{$key}-1 {
      flex-wrap: wrap;
    }
  }
  @else {
    @for $i from 0 to 1 {
      .#{$key}-#{$i} {
        #{$val}: $i;
      }
    }
  }
}

@each $key, $val in $grid-gaps {
  .gap-#{$key} > *{
    padding: $val;
  }
  .gap-#{$key} {
    margin-left: -$val;
    margin-right: -$val;
  }
}

@each $val in $layout-values {
  .justify-#{$val} {
    justify-content: $val;
  }
}

@each $val in $layout-values {
  .align-#{$val} {
    align-items: $val;
  }
}

@mixin col($value, $size, $columns) {
  .col-#{$value}-#{$size} {
    flex-grow: 0;
    width: math.div($value * 100%, $columns);
  }
}

@mixin cols($size) {
    @for $i from 1 through $grid-columns {
      @include col($i, $size, $grid-columns);
    }
}

@include xs {
  @include cols("xs");
}

@include sm {
  @include cols("sm");
}

@include md {
  @include cols("md");
}

@include lg {
  @include cols("lg");
}

@include xl {
  @include cols("xl");
}
